{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"input\"];\n\nfunction TextInputComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1, \" Email address is requeired \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TextInputComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1, \" Email address is not valid \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class TextInputComponent {\n  constructor(controlDir) {\n    this.controlDir = controlDir;\n    this.type = 'text';\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    const control = this.controlDir.control;\n    const validators = control.validator ? [control.validator] : [];\n    const asyncValidators = control.asyncValidator ? [control.asyncValidator] : [];\n    control.setValidators(validators);\n    control.setAsyncValidators(asyncValidators);\n    control.updateValueAndValidity();\n  }\n\n  onChange(event) {}\n\n  onTouched() {}\n\n  writeValue(obj) {\n    this.input.nativeElement.value = obj || '';\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n}\n\nTextInputComponent.ɵfac = function TextInputComponent_Factory(t) {\n  return new (t || TextInputComponent)(i0.ɵɵdirectiveInject(i1.NgControl, 2));\n};\n\nTextInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TextInputComponent,\n  selectors: [[\"app-text-input\"]],\n  viewQuery: function TextInputComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  inputs: {\n    type: \"type\",\n    label: \"label\"\n  },\n  decls: 6,\n  vars: 3,\n  consts: [[1, \"form-label-group\"], [\"id\", \"inputEmail\", \"placeholder\", \"Email address\", \"autofocus\", \"\", 1, \"form-control\", 3, \"type\", \"input\", \"blur\"], [\"for\", \"inputEmail\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n  template: function TextInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"input\", 1);\n      i0.ɵɵlistener(\"input\", function TextInputComponent_Template_input_input_1_listener($event) {\n        return ctx.onChange($event.target.value);\n      })(\"blur\", function TextInputComponent_Template_input_blur_1_listener() {\n        return ctx.onTouched();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, TextInputComponent_span_4_Template, 2, 0, \"span\", 3);\n      i0.ɵɵtemplate(5, TextInputComponent_span_5_Template, 2, 0, \"span\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"type\", ctx.type);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"email\").invalid && ctx.loginForm.get(\"email\").touched && ctx.loginForm.get(\"email\").errors[\"required\"]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"email\").invalid && ctx.loginForm.get(\"email\").touched && ctx.loginForm.get(\"email\").errors[\"pattern\"]);\n    }\n  },\n  directives: [i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZXh0LWlucHV0LmNvbXBvbmVudC5zY3NzIn0= */\"]\n});","map":{"version":3,"sources":["C:/Users/malid/Documents/MerchStore/client/src/app/shared/components/text-input/text-input.component.ts"],"names":["i0","i1","i2","_c0","TextInputComponent_span_4_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","TextInputComponent_span_5_Template","TextInputComponent","constructor","controlDir","type","valueAccessor","ngOnInit","control","validators","validator","asyncValidators","asyncValidator","setValidators","setAsyncValidators","updateValueAndValidity","onChange","event","onTouched","writeValue","obj","input","nativeElement","value","registerOnChange","fn","registerOnTouched","ɵfac","TextInputComponent_Factory","t","ɵɵdirectiveInject","NgControl","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","TextInputComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","inputs","label","decls","vars","consts","template","TextInputComponent_Template","ɵɵlistener","TextInputComponent_Template_input_input_1_listener","$event","target","TextInputComponent_Template_input_blur_1_listener","ɵɵtemplate","ɵɵadvance","ɵɵproperty","loginForm","get","invalid","touched","errors","directives","NgIf","styles"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/forms\";\r\nimport * as i2 from \"@angular/common\";\r\nconst _c0 = [\"input\"];\r\nfunction TextInputComponent_span_4_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"span\", 4);\r\n    i0.ɵɵtext(1, \" Email address is requeired \");\r\n    i0.ɵɵelementEnd();\r\n} }\r\nfunction TextInputComponent_span_5_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"span\", 4);\r\n    i0.ɵɵtext(1, \" Email address is not valid \");\r\n    i0.ɵɵelementEnd();\r\n} }\r\nexport class TextInputComponent {\r\n    constructor(controlDir) {\r\n        this.controlDir = controlDir;\r\n        this.type = 'text';\r\n        this.controlDir.valueAccessor = this;\r\n    }\r\n    ngOnInit() {\r\n        const control = this.controlDir.control;\r\n        const validators = control.validator ? [control.validator] : [];\r\n        const asyncValidators = control.asyncValidator ? [control.asyncValidator] : [];\r\n        control.setValidators(validators);\r\n        control.setAsyncValidators(asyncValidators);\r\n        control.updateValueAndValidity();\r\n    }\r\n    onChange(event) { }\r\n    onTouched() { }\r\n    writeValue(obj) {\r\n        this.input.nativeElement.value = obj || '';\r\n    }\r\n    registerOnChange(fn) {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn) {\r\n        this.onTouched = fn;\r\n    }\r\n}\r\nTextInputComponent.ɵfac = function TextInputComponent_Factory(t) { return new (t || TextInputComponent)(i0.ɵɵdirectiveInject(i1.NgControl, 2)); };\r\nTextInputComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TextInputComponent, selectors: [[\"app-text-input\"]], viewQuery: function TextInputComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\r\n    } }, inputs: { type: \"type\", label: \"label\" }, decls: 6, vars: 3, consts: [[1, \"form-label-group\"], [\"id\", \"inputEmail\", \"placeholder\", \"Email address\", \"autofocus\", \"\", 1, \"form-control\", 3, \"type\", \"input\", \"blur\"], [\"for\", \"inputEmail\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]], template: function TextInputComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0);\r\n        i0.ɵɵelementStart(1, \"input\", 1);\r\n        i0.ɵɵlistener(\"input\", function TextInputComponent_Template_input_input_1_listener($event) { return ctx.onChange($event.target.value); })(\"blur\", function TextInputComponent_Template_input_blur_1_listener() { return ctx.onTouched(); });\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(2, \"label\", 2);\r\n        i0.ɵɵtext(3, \"Email address\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(4, TextInputComponent_span_4_Template, 2, 0, \"span\", 3);\r\n        i0.ɵɵtemplate(5, TextInputComponent_span_5_Template, 2, 0, \"span\", 3);\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"type\", ctx.type);\r\n        i0.ɵɵadvance(3);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"email\").invalid && ctx.loginForm.get(\"email\").touched && ctx.loginForm.get(\"email\").errors[\"required\"]);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"email\").invalid && ctx.loginForm.get(\"email\").touched && ctx.loginForm.get(\"email\").errors[\"pattern\"]);\r\n    } }, directives: [i2.NgIf], styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZXh0LWlucHV0LmNvbXBvbmVudC5zY3NzIn0= */\"] });\r\n"]},"metadata":{},"sourceType":"module"}