{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nconst _c0 = [\"input\"];\nexport class TextInputComponent {\n  constructor(controlDir) {\n    this.controlDir = controlDir;\n    this.type = 'text';\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    const control = this.controlDir.control;\n    const validators = control.validator ? [control.validator] : [];\n    const asyncValidators = control.asyncValidator ? [control.asyncValidator] : [];\n    control.setValidators(validators);\n    control.setAsyncValidators(asyncValidators);\n    control.updateValueAndValidity();\n  }\n\n  onChange(event) {}\n\n  onTouched() {}\n\n  writeValue(obj) {\n    this.input.nativeElement.value = obj || '';\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n}\n\nTextInputComponent.ɵfac = function TextInputComponent_Factory(t) {\n  return new (t || TextInputComponent)(i0.ɵɵdirectiveInject(i1.NgControl, 2));\n};\n\nTextInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TextInputComponent,\n  selectors: [[\"app-text-input\"]],\n  viewQuery: function TextInputComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  inputs: {\n    type: \"type\",\n    label: \"label\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function TextInputComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZXh0LWlucHV0LmNvbXBvbmVudC5zY3NzIn0= */\"]\n});","map":{"version":3,"sources":["C:/Users/malid/Documents/MerchStore/client/src/app/shared/components/text-input/text-input.component.ts"],"names":["i0","i1","_c0","TextInputComponent","constructor","controlDir","type","valueAccessor","ngOnInit","control","validators","validator","asyncValidators","asyncValidator","setValidators","setAsyncValidators","updateValueAndValidity","onChange","event","onTouched","writeValue","obj","input","nativeElement","value","registerOnChange","fn","registerOnTouched","ɵfac","TextInputComponent_Factory","t","ɵɵdirectiveInject","NgControl","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","TextInputComponent_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","inputs","label","decls","vars","template","TextInputComponent_Template","styles"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,MAAMC,GAAG,GAAG,CAAC,OAAD,CAAZ;AACA,OAAO,MAAMC,kBAAN,CAAyB;AAC5BC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKA,UAAL,GAAkBA,UAAlB;AACA,SAAKC,IAAL,GAAY,MAAZ;AACA,SAAKD,UAAL,CAAgBE,aAAhB,GAAgC,IAAhC;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,UAAMC,OAAO,GAAG,KAAKJ,UAAL,CAAgBI,OAAhC;AACA,UAAMC,UAAU,GAAGD,OAAO,CAACE,SAAR,GAAoB,CAACF,OAAO,CAACE,SAAT,CAApB,GAA0C,EAA7D;AACA,UAAMC,eAAe,GAAGH,OAAO,CAACI,cAAR,GAAyB,CAACJ,OAAO,CAACI,cAAT,CAAzB,GAAoD,EAA5E;AACAJ,IAAAA,OAAO,CAACK,aAAR,CAAsBJ,UAAtB;AACAD,IAAAA,OAAO,CAACM,kBAAR,CAA2BH,eAA3B;AACAH,IAAAA,OAAO,CAACO,sBAAR;AACH;;AACDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ,CAAG;;AACnBC,EAAAA,SAAS,GAAG,CAAG;;AACfC,EAAAA,UAAU,CAACC,GAAD,EAAM;AACZ,SAAKC,KAAL,CAAWC,aAAX,CAAyBC,KAAzB,GAAiCH,GAAG,IAAI,EAAxC;AACH;;AACDI,EAAAA,gBAAgB,CAACC,EAAD,EAAK;AACjB,SAAKT,QAAL,GAAgBS,EAAhB;AACH;;AACDC,EAAAA,iBAAiB,CAACD,EAAD,EAAK;AAClB,SAAKP,SAAL,GAAiBO,EAAjB;AACH;;AAxB2B;;AA0BhCvB,kBAAkB,CAACyB,IAAnB,GAA0B,SAASC,0BAAT,CAAoCC,CAApC,EAAuC;AAAE,SAAO,KAAKA,CAAC,IAAI3B,kBAAV,EAA8BH,EAAE,CAAC+B,iBAAH,CAAqB9B,EAAE,CAAC+B,SAAxB,EAAmC,CAAnC,CAA9B,CAAP;AAA8E,CAAjJ;;AACA7B,kBAAkB,CAAC8B,IAAnB,GAA0B,aAAcjC,EAAE,CAACkC,iBAAH,CAAqB;AAAE5B,EAAAA,IAAI,EAAEH,kBAAR;AAA4BgC,EAAAA,SAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,CAAvC;AAA6DC,EAAAA,SAAS,EAAE,SAASC,wBAAT,CAAkCC,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACtLtC,MAAAA,EAAE,CAACwC,WAAH,CAAetC,GAAf,EAAoB,CAApB;AACH;;AAAC,QAAIoC,EAAE,GAAG,CAAT,EAAY;AACV,UAAIG,EAAJ;;AACAzC,MAAAA,EAAE,CAAC0C,cAAH,CAAkBD,EAAE,GAAGzC,EAAE,CAAC2C,WAAH,EAAvB,MAA6CJ,GAAG,CAACjB,KAAJ,GAAYmB,EAAE,CAACG,KAA5D;AACH;AAAE,GALsD;AAKpDC,EAAAA,MAAM,EAAE;AAAEvC,IAAAA,IAAI,EAAE,MAAR;AAAgBwC,IAAAA,KAAK,EAAE;AAAvB,GAL4C;AAKVC,EAAAA,KAAK,EAAE,CALG;AAKAC,EAAAA,IAAI,EAAE,CALN;AAKSC,EAAAA,QAAQ,EAAE,SAASC,2BAAT,CAAqCZ,EAArC,EAAyCC,GAAzC,EAA8C,CAAG,CALpE;AAKsEY,EAAAA,MAAM,EAAE,CAAC,6KAAD;AAL9E,CAArB,CAAxC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/forms\";\r\nconst _c0 = [\"input\"];\r\nexport class TextInputComponent {\r\n    constructor(controlDir) {\r\n        this.controlDir = controlDir;\r\n        this.type = 'text';\r\n        this.controlDir.valueAccessor = this;\r\n    }\r\n    ngOnInit() {\r\n        const control = this.controlDir.control;\r\n        const validators = control.validator ? [control.validator] : [];\r\n        const asyncValidators = control.asyncValidator ? [control.asyncValidator] : [];\r\n        control.setValidators(validators);\r\n        control.setAsyncValidators(asyncValidators);\r\n        control.updateValueAndValidity();\r\n    }\r\n    onChange(event) { }\r\n    onTouched() { }\r\n    writeValue(obj) {\r\n        this.input.nativeElement.value = obj || '';\r\n    }\r\n    registerOnChange(fn) {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn) {\r\n        this.onTouched = fn;\r\n    }\r\n}\r\nTextInputComponent.ɵfac = function TextInputComponent_Factory(t) { return new (t || TextInputComponent)(i0.ɵɵdirectiveInject(i1.NgControl, 2)); };\r\nTextInputComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TextInputComponent, selectors: [[\"app-text-input\"]], viewQuery: function TextInputComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\r\n    } }, inputs: { type: \"type\", label: \"label\" }, decls: 0, vars: 0, template: function TextInputComponent_Template(rf, ctx) { }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZXh0LWlucHV0LmNvbXBvbmVudC5zY3NzIn0= */\"] });\r\n"]},"metadata":{},"sourceType":"module"}